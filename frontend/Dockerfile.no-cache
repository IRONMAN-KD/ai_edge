# ---- Build Stage ----
FROM node:18-alpine AS builder

# Set the working directory
WORKDIR /app

# Copy package files first
COPY package*.json ./

# Clear npm cache and install dependencies with no cache
RUN npm cache clean --force && \
    npm config set fetch-timeout 600000 && \
    npm config set registry https://registry.npmjs.org/ && \
    rm -rf node_modules package-lock.json && \
    npm install --verbose --no-cache

# Copy the rest of the application code
COPY . .

# Build the application for production with increased memory
RUN NODE_OPTIONS="--max-old-space-size=4096" npm run build

# ---- Serve Stage ----
FROM nginx:alpine

# Remove the default Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Copy the custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the built files from the build stage
COPY --from=builder /app/dist /usr/share/nginx/html

# Expose port 80
EXPOSE 80 