version: '3.8'

services:
  # Database Service (MySQL)
  db:
    image: mysql:8.0
    container_name: ai_edge_db
    command: --default-authentication-plugin=mysql_native_password
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'your_strong_root_password'
      MYSQL_DATABASE: 'ai_edge'
      MYSQL_USER: 'ai_edge_user'
      MYSQL_PASSWORD: 'your_strong_password'
    volumes:
      - db_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3307:3306" # Expose on 3307 to avoid conflict with local MySQL
    networks:
      - ai_edge_network

  # Backend API Service
  backend:
    build:
      context: .
      dockerfile: api/Dockerfile
    container_name: ai_edge_backend
    restart: unless-stopped
    depends_on:
      - db
    ports:
      - "5001:5001"
    volumes:
      - ./api:/app
      - ./database:/app/database
      - ./components:/app/components
      - ./utils:/app/utils
      - ./alert_images:/app/alert_images
      - ./models:/app/ml_models
      - ./videos:/app/videos
      - ./logs:/app/logs
      - ./config:/app/config
    environment:
      # These should match the 'db' service credentials
      MYSQL_HOST: 'db'
      MYSQL_USER: 'ai_edge_user'
      MYSQL_PASSWORD: 'your_strong_password'
      MYSQL_DATABASE: 'ai_edge'
      MYSQL_PORT: 3306 # Port inside the Docker network
    networks:
      - ai_edge_network

  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: ai_edge_frontend
    restart: unless-stopped
    depends_on:
      - backend
    ports:
      - "8080:80"
    networks:
      - ai_edge_network

networks:
  ai_edge_network:
    driver: bridge

volumes:
  db_data:
    driver: local