FROM ubuntu:20.04

LABEL maintainer="AI Edge Team"
LABEL description="AI Edge API服务 - 华为Atlas NPU推理版本"

# 设置工作目录
WORKDIR /app

# 设置环境变量
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONPATH=/app/src
ENV PLATFORM=atlas_npu
ENV CONFIG_PATH=/app/config.yml
ENV ASCEND_RT_PATH=/usr/local/Ascend/runtime
ENV LD_LIBRARY_PATH=/usr/local/Ascend/runtime/lib64:/usr/local/Ascend/driver/lib64

# 安装系统依赖
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libffi-dev \
    curl \
    libgl1-mesa-glx \
    libglib2.0-0 \
    libgtk-3-0 \
    libavcodec-dev \
    libavformat-dev \
    libswscale-dev \
    libavdevice-dev \
    libssl-dev \
    ffmpeg \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# 创建Python符号链接
RUN ln -s /usr/bin/python3 /usr/bin/python

# 升级pip
RUN python -m pip install --upgrade pip

# 复制需求文件
COPY requirements/base.txt requirements/atlas.txt ./

# 安装Python依赖
RUN pip install --no-cache-dir -r base.txt && \
    pip install --no-cache-dir -r atlas.txt

# 复制源代码
COPY src/ ./src/
COPY deployments/atlas_npu/config.yml ./config.yml

# 创建必要的目录
RUN mkdir -p /app/models /app/alert_images /app/logs

# 暴露端口
EXPOSE 8000

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# 优化：opencv-python-headless 替换 opencv-python，避免GUI依赖
RUN pip uninstall -y opencv-python && pip install opencv-python-headless>=4.8.0

# 启动命令
CMD ["python", "-m", "uvicorn", "src.api.main:app", "--host", "0.0.0.0", "--port", "8000"] 