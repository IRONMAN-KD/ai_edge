# Go Platform 配置示例文件
# 复制此文件为 config.yaml 并根据实际环境修改配置

# 服务器配置
server:
  # 服务端口
  port: 8080
  # 运行模式: debug, release, test
  mode: debug
  # 读取超时时间（秒）
  read_timeout: 30
  # 写入超时时间（秒）
  write_timeout: 30
  # 空闲超时时间（秒）
  idle_timeout: 60
  # 最大请求头大小（字节）
  max_header_bytes: 1048576
  # 是否启用HTTPS
  enable_https: false
  # SSL证书文件路径
  cert_file: ""
  # SSL私钥文件路径
  key_file: ""
  # 信任的代理IP列表
  trusted_proxies:
    - "127.0.0.1"
    - "::1"

# 数据库配置
database:
  # 数据库驱动: mysql, postgres, sqlite
  driver: mysql
  # 数据库主机
  host: localhost
  # 数据库端口
  port: 3306
  # 数据库用户名
  username: go_platform
  # 数据库密码
  password: go_platform_password
  # 数据库名称
  database: go_platform
  # 字符集（MySQL）
  charset: utf8mb4
  # 是否解析时间
  parse_time: true
  # 时区
  loc: Local
  # 最大空闲连接数
  max_idle_conns: 10
  # 最大打开连接数
  max_open_conns: 100
  # 连接最大生存时间（秒）
  conn_max_lifetime: 3600
  # 是否启用日志
  log_mode: true
  # 慢查询阈值（毫秒）
  slow_threshold: 200
  # 是否忽略记录未找到错误
  ignore_record_not_found_error: false
  # 是否禁用自动ping
  disable_automatic_ping: false
  # 是否禁用外键约束检查
  disable_foreign_key_constraint_when_migrating: false

# JWT配置
jwt:
  # JWT密钥（生产环境请使用强密钥）
  secret: "your-super-secret-jwt-key-change-in-production"
  # 访问令牌过期时间（秒）
  access_token_expire: 3600
  # 刷新令牌过期时间（秒）
  refresh_token_expire: 604800
  # 发行者
  issuer: "go-platform"
  # 受众
  audience: "go-platform-users"
  # 算法
  algorithm: "HS256"

# 日志配置
logger:
  # 日志级别: debug, info, warn, error, fatal, panic
  level: info
  # 日志格式: json, console
  format: json
  # 输出目标: stdout, stderr, file
  output: stdout
  # 日志文件路径（当output为file时）
  file_path: "logs/app.log"
  # 单个日志文件最大大小（MB）
  max_size: 100
  # 保留的旧日志文件最大数量
  max_backups: 3
  # 保留旧日志文件的最大天数
  max_age: 28
  # 是否压缩旧日志文件
  compress: true
  # 是否启用调用者信息
  enable_caller: true
  # 是否启用堆栈跟踪
  enable_stacktrace: true
  # 时间格式
  time_format: "2006-01-02 15:04:05"

# Redis配置（可选）
redis:
  # Redis主机
  host: localhost
  # Redis端口
  port: 6379
  # Redis密码
  password: ""
  # Redis数据库索引
  db: 0
  # 连接池大小
  pool_size: 10
  # 最小空闲连接数
  min_idle_conns: 5
  # 连接超时时间（秒）
  dial_timeout: 5
  # 读取超时时间（秒）
  read_timeout: 3
  # 写入超时时间（秒）
  write_timeout: 3
  # 连接池超时时间（秒）
  pool_timeout: 4
  # 空闲连接检查频率（分钟）
  idle_check_frequency: 60
  # 空闲连接超时时间（分钟）
  idle_timeout: 300
  # 最大连接年龄（分钟）
  max_conn_age: 0

# CORS配置
cors:
  # 允许的源
  allowed_origins:
    - "http://localhost:3000"
    - "http://localhost:8080"
  # 允许的方法
  allowed_methods:
    - "GET"
    - "POST"
    - "PUT"
    - "PATCH"
    - "DELETE"
    - "OPTIONS"
  # 允许的头部
  allowed_headers:
    - "Origin"
    - "Content-Length"
    - "Content-Type"
    - "Authorization"
    - "X-Requested-With"
  # 暴露的头部
  exposed_headers:
    - "Content-Length"
  # 是否允许凭证
  allow_credentials: true
  # 预检请求缓存时间（秒）
  max_age: 86400

# 限流配置
rate_limit:
  # 是否启用限流
  enabled: true
  # 每秒请求数限制
  requests_per_second: 100
  # 突发请求数限制
  burst: 200
  # 限流键前缀
  key_prefix: "rate_limit:"
  # 限流窗口大小（秒）
  window_size: 60
  # 是否跳过成功的请求
  skip_successful_request: false
  # 是否跳过失败的请求
  skip_failed_request: false
  # 限流头部
  headers:
    # 限制头部名称
    limit: "X-RateLimit-Limit"
    # 剩余头部名称
    remaining: "X-RateLimit-Remaining"
    # 重置头部名称
    reset: "X-RateLimit-Reset"

# 安全配置
security:
  # 密码最小长度
  password_min_length: 8
  # 密码最大长度
  password_max_length: 128
  # 是否要求密码包含数字
  password_require_number: true
  # 是否要求密码包含小写字母
  password_require_lowercase: true
  # 是否要求密码包含大写字母
  password_require_uppercase: true
  # 是否要求密码包含特殊字符
  password_require_special: true
  # 密码哈希成本
  password_hash_cost: 12
  # 会话超时时间（秒）
  session_timeout: 3600
  # 最大登录尝试次数
  max_login_attempts: 5
  # 登录锁定时间（秒）
  login_lockout_duration: 900
  # 是否启用CSRF保护
  enable_csrf: true
  # CSRF令牌长度
  csrf_token_length: 32
  # 是否启用内容安全策略
  enable_csp: true
  # 内容安全策略
  csp_policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'"

# 文件上传配置
upload:
  # 上传目录
  upload_dir: "uploads"
  # 最大文件大小（MB）
  max_file_size: 10
  # 允许的文件类型
  allowed_types:
    - "image/jpeg"
    - "image/png"
    - "image/gif"
    - "application/pdf"
    - "text/plain"
  # 是否启用文件压缩
  enable_compression: true
  # 压缩质量（1-100）
  compression_quality: 85
  # 是否生成缩略图
  generate_thumbnail: true
  # 缩略图尺寸
  thumbnail_size:
    width: 200
    height: 200

# 邮件配置
email:
  # SMTP主机
  smtp_host: "smtp.gmail.com"
  # SMTP端口
  smtp_port: 587
  # SMTP用户名
  smtp_username: "your-email@gmail.com"
  # SMTP密码
  smtp_password: "your-app-password"
  # 发件人邮箱
  from_email: "your-email@gmail.com"
  # 发件人姓名
  from_name: "Go Platform"
  # 是否启用TLS
  enable_tls: true
  # 是否启用SSL
  enable_ssl: false
  # 连接超时时间（秒）
  timeout: 30

# 监控配置
monitoring:
  # 是否启用监控
  enabled: true
  # Prometheus指标路径
  metrics_path: "/metrics"
  # 健康检查路径
  health_path: "/health"
  # 就绪检查路径
  ready_path: "/ready"
  # 是否启用pprof
  enable_pprof: false
  # pprof路径前缀
  pprof_prefix: "/debug/pprof"

# 缓存配置
cache:
  # 缓存类型: memory, redis
  type: "memory"
  # 默认过期时间（秒）
  default_expiration: 3600
  # 清理间隔（秒）
  cleanup_interval: 600
  # 最大缓存项数
  max_items: 10000
  # 最大缓存大小（MB）
  max_size: 100

# 队列配置
queue:
  # 队列类型: memory, redis
  type: "memory"
  # 默认队列名称
  default_queue: "default"
  # 工作进程数
  worker_count: 5
  # 最大重试次数
  max_retries: 3
  # 重试延迟（秒）
  retry_delay: 60
  # 任务超时时间（秒）
  task_timeout: 300

# 第三方服务配置
third_party:
  # OpenAI配置
  openai:
    api_key: "your-openai-api-key"
    base_url: "https://api.openai.com/v1"
    timeout: 30
    max_retries: 3
  
  # 其他AI服务配置
  anthropic:
    api_key: "your-anthropic-api-key"
    base_url: "https://api.anthropic.com"
    timeout: 30
    max_retries: 3
  
  # 云存储配置
  aws:
    access_key_id: "your-aws-access-key"
    secret_access_key: "your-aws-secret-key"
    region: "us-west-2"
    bucket: "your-s3-bucket"
  
  # 消息推送配置
  firebase:
    project_id: "your-firebase-project"
    private_key: "your-firebase-private-key"
    client_email: "your-firebase-client-email"

# 开发环境配置
development:
  # 是否启用热重载
  enable_hot_reload: true
  # 是否启用调试模式
  enable_debug: true
  # 是否启用详细日志
  enable_verbose_logging: true
  # 是否禁用认证（仅开发环境）
  disable_auth: false
  # 是否启用模拟数据
  enable_mock_data: false
  # 是否启用API文档
  enable_api_docs: true
  # API文档路径
  api_docs_path: "/docs"

# 生产环境配置
production:
  # 是否启用性能分析
  enable_profiling: false
  # 是否启用指标收集
  enable_metrics: true
  # 是否启用分布式追踪
  enable_tracing: true
  # 追踪采样率
  tracing_sample_rate: 0.1
  # 是否启用错误报告
  enable_error_reporting: true
  # 错误报告服务URL
  error_reporting_url: ""